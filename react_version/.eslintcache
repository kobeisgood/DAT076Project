[{"C:\\Users\\marcu\\git\\DAT076Project\\react_version\\src\\index.js":"1","C:\\Users\\marcu\\git\\DAT076Project\\react_version\\src\\reportWebVitals.js":"2","C:\\Users\\marcu\\git\\DAT076Project\\react_version\\src\\App.js":"3","C:\\Users\\marcu\\git\\DAT076Project\\react_version\\src\\components\\CircleDiagram.js":"4","C:\\Users\\marcu\\git\\DAT076Project\\react_version\\src\\components\\NavigationBar.js":"5","C:\\Users\\marcu\\git\\DAT076Project\\react_version\\src\\components\\DashboardCard.js":"6","C:\\Users\\marcu\\git\\DAT076Project\\react_version\\src\\pages\\Dashboard.js":"7","C:\\Users\\marcu\\git\\DAT076Project\\react_version\\src\\pages\\Monthly.js":"8","C:\\Users\\marcu\\git\\DAT076Project\\react_version\\src\\pages\\Graph.js":"9","C:\\Users\\marcu\\git\\DAT076Project\\react_version\\src\\components\\ExpenseTable.js":"10","C:\\Users\\marcu\\git\\DAT076Project\\react_version\\src\\components\\SideBar.js":"11","C:\\Users\\marcu\\git\\DAT076Project\\react_version\\src\\components\\Sidebar.js":"12","C:\\Users\\marcu\\git\\DAT076Project\\react_version\\src\\components\\SidebarData.js":"13"},{"size":1236,"mtime":1614425979527,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1614415979128,"results":"16","hashOfConfig":"15"},{"size":578,"mtime":1614415979098,"results":"17","hashOfConfig":"15"},{"size":1578,"mtime":1614415979103,"results":"18","hashOfConfig":"15"},{"size":1208,"mtime":1614419531021,"results":"19","hashOfConfig":"15"},{"size":1914,"mtime":1614416330295,"results":"20","hashOfConfig":"15"},{"size":932,"mtime":1614416330320,"results":"21","hashOfConfig":"15"},{"size":1319,"mtime":1614416330324,"results":"22","hashOfConfig":"15"},{"size":4565,"mtime":1614416330320,"results":"23","hashOfConfig":"15"},{"size":3835,"mtime":1614416330295,"results":"24","hashOfConfig":"15"},{"size":1788,"mtime":1614425951082,"results":"25","hashOfConfig":"15"},{"size":1788,"mtime":1614425951082,"results":"26","hashOfConfig":"15"},{"size":1059,"mtime":1614425951920,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"bcgi2l",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\marcu\\git\\DAT076Project\\react_version\\src\\index.js",["59","60","61","62","63"],"C:\\Users\\marcu\\git\\DAT076Project\\react_version\\src\\reportWebVitals.js",[],["64","65"],"C:\\Users\\marcu\\git\\DAT076Project\\react_version\\src\\App.js",[],"C:\\Users\\marcu\\git\\DAT076Project\\react_version\\src\\components\\CircleDiagram.js",[],"C:\\Users\\marcu\\git\\DAT076Project\\react_version\\src\\components\\NavigationBar.js",[],"C:\\Users\\marcu\\git\\DAT076Project\\react_version\\src\\components\\DashboardCard.js",["66"],"import React from 'react';\nimport CircleDiagram from './CircleDiagram'\nimport Chart from 'chart.js';\nimport '../main.css'\n\n\nexport default class DashBoardCard extends React.Component {\n\nchartRef2 = React.createRef();\n\ncomponentDidMount() {\n  const doughnutChartRef = this.chartRef2.current.getContext(\"2d\");\n\n  // Doughnut chart code\n  new Chart(doughnutChartRef, {\n    type:\"doughnut\",\n    data: {\n      //Bring in data\n      labels: [\"Hyra\", \"Mat\", \"Shopping\"],\n      datasets: [\n          {\n\n              label: [\"Utgifter <månad, år>\"],\n              backgroundColor: [\"#3e95cd\", \"#8e5ea2\",\"#3cba9f\"],\n              data: [5000, 3000, 3000],\n          }\n      ]\n    },\n\n    options: {\n      title: {\n        display: false,\n        text: 'Utgifter <månad, år> procentuellt'\n      },\n      legend: {\n        display: false\n      }\n    },\n\n  });\n}\n\n  render() {\n\n    return(\n      <div class=\"dashboard-card box-shadow\">\n\n        <p class=\"dashboard-card-name\"> <span>{this.props.month}</span> <span>{this.props.year}</span> </p>\n\n        <canvas id=\"doughnutChart\" ref={this.chartRef2}></canvas>\n\n        <div class=\"row\">\n            <div class=\"col\">\n                <span class=\"dot color-income\"></span>\n                Income:\n            </div>\n            <div class=\"col\">\n              {this.props.income} kr\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col\">\n                <span class=\"dot color-expense\"></span>\n                Expenses:\n            </div>\n            <div class=\"col\">\n            {this.props.expense} kr\n            </div>\n        </div>\n        \n        <div class=\"row\">\n            <div class=\"col\">\n                <span class=\"dot color-saving\"></span>\n                Savings:\n            </div>\n            <div class=\"col\">\n              {this.props.savings} kr\n            </div>\n        </div>\n      </div>\n    );\n  }\n\n\n\n\n}\n","C:\\Users\\marcu\\git\\DAT076Project\\react_version\\src\\pages\\Dashboard.js",["67"],"import React from \"react\";\n\nimport DashboardCard from \"../components/DashboardCard\";\nimport CircleDiagram from '../components/CircleDiagram'\n\nexport default class Dashboard extends React.Component{\n    render() {\n      return (\n        <div class=\"container-fluid\">\n          <div class=\"d-flex\">\n            <div class=\"col-sm\">\n              <DashboardCard month=\"Januari\" year=\"2021\" income=\"1\" expense=\"2\" savings=\"3\"/>\n            </div>\n            <div class=\"col-sm\">\n              <DashboardCard month=\"February\" year=\"2021\" income=\"4\" expense=\"5\" savings=\"6\"/>\n            </div>\n            <div class=\"col-sm\">\n              <DashboardCard month=\"March\" year=\"2021\" income=\"7\" expense=\"8\" savings=\"9\"/>\n            </div>\n            <div class=\"col-sm\">\n              <DashboardCard month=\"April\" year=\"2021\" income=\"10\" expense=\"11\" savings=\"12\"/>\n            </div>\n          </div>\n        </div>\n\n      )\n    };\n  }","C:\\Users\\marcu\\git\\DAT076Project\\react_version\\src\\pages\\Monthly.js",["68"],"import React from \"react\";\nimport ExpenseTable from \"../components/ExpenseTable\";\nimport CircleDiagram from \"../components/CircleDiagram\";\nimport Chart from 'chart.js';\n\nimport '../css/monthly.css';\n\nexport default class Monthly extends React.Component {\n\nchartRef2 = React.createRef();\n\ncomponentDidMount() {\n    const doughnutChartRef = this.chartRef2.current.getContext(\"2d\");\n\n    // Doughnut chart code\n    new Chart(doughnutChartRef, {\n      type:\"doughnut\",\n      data: {\n        //Bring in data\n        labels: [\"Hyra\", \"Mat\", \"Shopping\"],\n        datasets: [\n            {\n\n                label: [\"Utgifter <månad, år>\"],\n                backgroundColor: [\"#3e95cd\", \"#8e5ea2\",\"#3cba9f\"],\n                data: [5000, 3000, 3000],\n            }\n        ]\n      },\n\n      options: {\n        title: {\n          display: true,\n          text: 'Utgifter <månad, år> procentuellt'\n        }\n      },\n\n    });\n\n}\n\nrender(){\n    return(\n    <div>\n        <div class=\"row\">\n            <h1>January 2021</h1>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-6\">\n            <ExpenseTable id=\"t1\"/>\n            <ExpenseTable id=\"t2\"/>\n            </div>\n        <div class=\"col-6\">\n           <canvas id=\"doughnutChart\" ref={this.chartRef2}></canvas>\n        </div>\n    </div>\n    </div>\n)};\n\n}\n","C:\\Users\\marcu\\git\\DAT076Project\\react_version\\src\\pages\\Graph.js",["69","70","71","72","73","74","75","76","77"],"import React from 'react';\nimport Chart from 'chart.js';\nimport '../css/graph.css'\n\n\nexport default class Graph extends React.Component {\n\nchartRef1 = React.createRef();\nchartRef2 = React.createRef();\n\n    componentDidMount() {\n        const barChartRef = this.chartRef1.current.getContext(\"2d\");\n        const doughnutChartRef = this.chartRef2.current.getContext(\"2d\");\n\n        // Horizontal bar code\n        new Chart(barChartRef, {\n            type: \"horizontalBar\",\n            data: {\n                //Bring in data\n                labels: [\"Hyra\", \"Mat\", \"Shopping\"],\n                datasets: [\n                    {\n\n                        label: \" Kronor\",\n                        backgroundColor: [\"#3e95cd\", \"#8e5ea2\",\"#3cba9f\"],\n                        data: [5000, 3000, 3000],\n                    }\n                ]\n            },\n            options: {\n              responsive: true,\n              scales: {\n                  xAxes: [{\n                      ticks: {\n                          beginAtZero: true,\n                          max:7000 //TODO take data array, find max value, max of graph should be max value + constant\n                          }\n                   }]\n               },\n              title: {\n                display: true,\n                text: 'Distribution av utgifter <månad, år>'\n              },\n              legend: {\n                display: false\n              }\n            }\n        });\n\n        // Doughnut chart code\n        new Chart(doughnutChartRef, {\n          type:\"doughnut\",\n          data: {\n            //Bring in data\n            labels: [\"Hyra\", \"Mat\", \"Shopping\"],\n            datasets: [\n                {\n\n                    label: [\"Utgifter <månad, år>\"],\n                    backgroundColor: [\"#3e95cd\", \"#8e5ea2\",\"#3cba9f\"],\n                    data: [5000, 3000, 3000],\n                }\n            ]\n          },\n\n          options: {\n            title: {\n              display: true,\n              text: 'Utgifter <månad, år> procentuellt'\n            }\n          },\n\n        });\n\n      }\n\n  render() {\n    return(\n\n    <div>\n        <div class='row'>\n\n          <div class='col-1'>\n            <p class=\"text-sorting\" >2021</p>\n            <div class=\"dropdown\">\n              <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                Välj år\n              </button>\n              <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                <a class=\"dropdown-item\" href=\"#\">Action</a>\n                <a class=\"dropdown-item\" href=\"#\">Another action</a>\n                <a class=\"dropdown-item\" href=\"#\">Something else here</a>\n              </div>\n              </div>\n          </div>\n\n          <div class='col-1'>\n            <p class=\"text-sorting\" >January</p>\n            <div class=\"dropdown\">\n              <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                Välj månad\n              </button>\n              <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                <a class=\"dropdown-item\" href=\"#\">Action</a>\n                <a class=\"dropdown-item\" href=\"#\">Another action</a>\n                <a class=\"dropdown-item\" href=\"#\">Something else here</a>\n              </div>\n              </div>\n          </div>\n\n          <div class='col-1'>\n            <p class=\"text-sorting\" > 21</p>\n            <div class=\"dropdown\">\n              <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                Välj dag\n              </button>\n              <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                <a class=\"dropdown-item\" href=\"#\">Action</a>\n                <a class=\"dropdown-item\" href=\"#\">Another action</a>\n                <a class=\"dropdown-item\" href=\"#\">Something else here</a>\n              </div>\n              </div>\n          </div>\n        </div>\n\n        <div class='row'>\n          <div class='col-6 bar-top-buffer' style={{position: 'relative'}}>\n            <canvas id=\"barChart\" ref={this.chartRef1}></canvas>\n         </div>\n         <div class='col-6 donut-top-buffer' style={{position: 'relative'}}>\n           <canvas id=\"doughnutChart\" ref={this.chartRef2}></canvas>\n        </div>\n       </div>\n    </div>\n   )\n };\n\n}\n","C:\\Users\\marcu\\git\\DAT076Project\\react_version\\src\\components\\ExpenseTable.js",[],"C:\\Users\\marcu\\git\\DAT076Project\\react_version\\src\\components\\SideBar.js",[],"C:\\Users\\marcu\\git\\DAT076Project\\react_version\\src\\components\\Sidebar.js",["78","79"],"C:\\Users\\marcu\\git\\DAT076Project\\react_version\\src\\components\\SidebarData.js",[],{"ruleId":"80","severity":1,"message":"81","line":4,"column":8,"nodeType":"82","messageId":"83","endLine":4,"endColumn":11},{"ruleId":"80","severity":1,"message":"84","line":6,"column":32,"nodeType":"82","messageId":"83","endLine":6,"endColumn":42},{"ruleId":"80","severity":1,"message":"85","line":8,"column":8,"nodeType":"82","messageId":"83","endLine":8,"endColumn":21},{"ruleId":"80","severity":1,"message":"86","line":9,"column":8,"nodeType":"82","messageId":"83","endLine":9,"endColumn":21},{"ruleId":"80","severity":1,"message":"87","line":14,"column":8,"nodeType":"82","messageId":"83","endLine":14,"endColumn":15},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"80","severity":1,"message":"85","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":21},{"ruleId":"80","severity":1,"message":"85","line":4,"column":8,"nodeType":"82","messageId":"83","endLine":4,"endColumn":21},{"ruleId":"80","severity":1,"message":"85","line":3,"column":8,"nodeType":"82","messageId":"83","endLine":3,"endColumn":21},{"ruleId":"92","severity":1,"message":"93","line":90,"column":17,"nodeType":"94","endLine":90,"endColumn":51},{"ruleId":"92","severity":1,"message":"93","line":91,"column":17,"nodeType":"94","endLine":91,"endColumn":51},{"ruleId":"92","severity":1,"message":"93","line":92,"column":17,"nodeType":"94","endLine":92,"endColumn":51},{"ruleId":"92","severity":1,"message":"93","line":104,"column":17,"nodeType":"94","endLine":104,"endColumn":51},{"ruleId":"92","severity":1,"message":"93","line":105,"column":17,"nodeType":"94","endLine":105,"endColumn":51},{"ruleId":"92","severity":1,"message":"93","line":106,"column":17,"nodeType":"94","endLine":106,"endColumn":51},{"ruleId":"92","severity":1,"message":"93","line":118,"column":17,"nodeType":"94","endLine":118,"endColumn":51},{"ruleId":"92","severity":1,"message":"93","line":119,"column":17,"nodeType":"94","endLine":119,"endColumn":51},{"ruleId":"92","severity":1,"message":"93","line":120,"column":17,"nodeType":"94","endLine":120,"endColumn":51},{"ruleId":"80","severity":1,"message":"95","line":5,"column":9,"nodeType":"82","messageId":"83","endLine":5,"endColumn":22},{"ruleId":"80","severity":1,"message":"96","line":6,"column":9,"nodeType":"82","messageId":"83","endLine":6,"endColumn":19},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'IndexRoute' is defined but never used.","'CircleDiagram' is defined but never used.","'DashboardCard' is defined but never used.","'Sidebar' is defined but never used.","no-native-reassign",["97"],"no-negated-in-lhs",["98"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'faCalendarAlt' is defined but never used.","'faChartBar' is defined but never used.","no-global-assign","no-unsafe-negation"]
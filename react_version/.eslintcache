[{"C:\\Users\\theok\\OneDrive\\Documents\\NetBeansProjects\\DAT076Project\\react_version\\src\\index.js":"1","C:\\Users\\theok\\OneDrive\\Documents\\NetBeansProjects\\DAT076Project\\react_version\\src\\App.js":"2","C:\\Users\\theok\\OneDrive\\Documents\\NetBeansProjects\\DAT076Project\\react_version\\src\\reportWebVitals.js":"3","C:\\Users\\theok\\OneDrive\\Documents\\NetBeansProjects\\DAT076Project\\react_version\\src\\pages\\Dashboard.js":"4","C:\\Users\\theok\\OneDrive\\Documents\\NetBeansProjects\\DAT076Project\\react_version\\src\\components\\CircleDiagram.js":"5","C:\\Users\\theok\\OneDrive\\Documents\\NetBeansProjects\\DAT076Project\\react_version\\src\\components\\NavigationBar.js":"6","C:\\Users\\theok\\OneDrive\\Documents\\NetBeansProjects\\DAT076Project\\react_version\\src\\pages\\Monthly.js":"7","C:\\Users\\theok\\OneDrive\\Documents\\NetBeansProjects\\DAT076Project\\react_version\\src\\components\\DashboardCard.js":"8","C:\\Users\\theok\\OneDrive\\Documents\\NetBeansProjects\\DAT076Project\\react_version\\src\\pages\\Graph.js":"9","C:\\Users\\theok\\OneDrive\\Documents\\NetBeansProjects\\DAT076Project\\react_version\\src\\components\\Sidebar.js":"10","C:\\Users\\theok\\OneDrive\\Documents\\NetBeansProjects\\DAT076Project\\react_version\\src\\components\\ExpenseTable.js":"11","C:\\Users\\theok\\OneDrive\\Documents\\NetBeansProjects\\DAT076Project\\react_version\\src\\components\\SidebarData.js":"12"},{"size":1154,"mtime":1614451934413,"results":"13","hashOfConfig":"14"},{"size":605,"mtime":1614256014055,"results":"15","hashOfConfig":"14"},{"size":375,"mtime":1612260261566,"results":"16","hashOfConfig":"14"},{"size":959,"mtime":1614256270633,"results":"17","hashOfConfig":"14"},{"size":1633,"mtime":1612277232946,"results":"18","hashOfConfig":"14"},{"size":1241,"mtime":1614256270601,"results":"19","hashOfConfig":"14"},{"size":1379,"mtime":1614256270653,"results":"20","hashOfConfig":"14"},{"size":2002,"mtime":1614256270599,"results":"21","hashOfConfig":"14"},{"size":4703,"mtime":1614256270633,"results":"22","hashOfConfig":"14"},{"size":2014,"mtime":1614454685979,"results":"23","hashOfConfig":"14"},{"size":3930,"mtime":1614256270612,"results":"24","hashOfConfig":"14"},{"size":1059,"mtime":1614453790899,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"twkect",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"29"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"29"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"C:\\Users\\theok\\OneDrive\\Documents\\NetBeansProjects\\DAT076Project\\react_version\\src\\index.js",["57","58","59"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter , Route, IndexRoute } from \"react-router-dom\";\r\n\r\nimport NavigationBar from \"./components/NavigationBar\";\r\nimport Dashboard from \"./pages/Dashboard\";\r\nimport Monthly from \"./pages/Monthly\";\r\nimport Graph from \"./pages/Graph\";\r\nimport Sidebar from './components/Sidebar';\r\n\r\nReactDOM.render(\r\n\r\n<BrowserRouter>\r\n  <div class=\"general-styling\">\r\n    <div class=\"row\">\r\n      <div class=\"col-2\">\r\n        <Sidebar/>\r\n      </div>\r\n      <div class=\"col-10\">\r\n        <Route path=\"/dashboard\" component={Dashboard}></Route>\r\n        <Route path=\"/monthly\" component={Monthly}></Route>\r\n        <Route path=\"/graph\" component={Graph}></Route>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["60","61"],"C:\\Users\\theok\\OneDrive\\Documents\\NetBeansProjects\\DAT076Project\\react_version\\src\\App.js",[],"C:\\Users\\theok\\OneDrive\\Documents\\NetBeansProjects\\DAT076Project\\react_version\\src\\reportWebVitals.js",[],"C:\\Users\\theok\\OneDrive\\Documents\\NetBeansProjects\\DAT076Project\\react_version\\src\\pages\\Dashboard.js",["62"],"import React from \"react\";\r\n\r\nimport DashboardCard from \"../components/DashboardCard\";\r\nimport CircleDiagram from '../components/CircleDiagram'\r\n\r\nexport default class Dashboard extends React.Component{\r\n    render() {\r\n      return (\r\n        <div class=\"container-fluid\">\r\n          <div class=\"d-flex\">\r\n            <div class=\"col-sm\">\r\n              <DashboardCard month=\"Januari\" year=\"2021\" income=\"1\" expense=\"2\" savings=\"3\"/>\r\n            </div>\r\n            <div class=\"col-sm\">\r\n              <DashboardCard month=\"February\" year=\"2021\" income=\"4\" expense=\"5\" savings=\"6\"/>\r\n            </div>\r\n            <div class=\"col-sm\">\r\n              <DashboardCard month=\"March\" year=\"2021\" income=\"7\" expense=\"8\" savings=\"9\"/>\r\n            </div>\r\n            <div class=\"col-sm\">\r\n              <DashboardCard month=\"April\" year=\"2021\" income=\"10\" expense=\"11\" savings=\"12\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      )\r\n    };\r\n  }","C:\\Users\\theok\\OneDrive\\Documents\\NetBeansProjects\\DAT076Project\\react_version\\src\\components\\CircleDiagram.js",[],"C:\\Users\\theok\\OneDrive\\Documents\\NetBeansProjects\\DAT076Project\\react_version\\src\\components\\NavigationBar.js",[],"C:\\Users\\theok\\OneDrive\\Documents\\NetBeansProjects\\DAT076Project\\react_version\\src\\pages\\Monthly.js",["63"],"import React from \"react\";\r\nimport ExpenseTable from \"../components/ExpenseTable\";\r\nimport CircleDiagram from \"../components/CircleDiagram\";\r\nimport Chart from 'chart.js';\r\n\r\nimport '../css/monthly.css';\r\n\r\nexport default class Monthly extends React.Component {\r\n\r\nchartRef2 = React.createRef();\r\n\r\ncomponentDidMount() {\r\n    const doughnutChartRef = this.chartRef2.current.getContext(\"2d\");\r\n\r\n    // Doughnut chart code\r\n    new Chart(doughnutChartRef, {\r\n      type:\"doughnut\",\r\n      data: {\r\n        //Bring in data\r\n        labels: [\"Hyra\", \"Mat\", \"Shopping\"],\r\n        datasets: [\r\n            {\r\n\r\n                label: [\"Utgifter <månad, år>\"],\r\n                backgroundColor: [\"#3e95cd\", \"#8e5ea2\",\"#3cba9f\"],\r\n                data: [5000, 3000, 3000],\r\n            }\r\n        ]\r\n      },\r\n\r\n      options: {\r\n        title: {\r\n          display: true,\r\n          text: 'Utgifter <månad, år> procentuellt'\r\n        }\r\n      },\r\n\r\n    });\r\n\r\n}\r\n\r\nrender(){\r\n    return(\r\n    <div>\r\n        <div class=\"row\">\r\n            <h1>January 2021</h1>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-6\">\r\n            <ExpenseTable id=\"t1\"/>\r\n            <ExpenseTable id=\"t2\"/>\r\n            </div>\r\n        <div class=\"col-6\">\r\n           <canvas id=\"doughnutChart\" ref={this.chartRef2}></canvas>\r\n        </div>\r\n    </div>\r\n    </div>\r\n)};\r\n\r\n}\r\n","C:\\Users\\theok\\OneDrive\\Documents\\NetBeansProjects\\DAT076Project\\react_version\\src\\components\\DashboardCard.js",["64"],"import React from 'react';\r\nimport CircleDiagram from './CircleDiagram'\r\nimport Chart from 'chart.js';\r\nimport '../main.css'\r\n\r\n\r\nexport default class DashBoardCard extends React.Component {\r\n\r\nchartRef2 = React.createRef();\r\n\r\ncomponentDidMount() {\r\n  const doughnutChartRef = this.chartRef2.current.getContext(\"2d\");\r\n\r\n  // Doughnut chart code\r\n  new Chart(doughnutChartRef, {\r\n    type:\"doughnut\",\r\n    data: {\r\n      //Bring in data\r\n      labels: [\"Hyra\", \"Mat\", \"Shopping\"],\r\n      datasets: [\r\n          {\r\n\r\n              label: [\"Utgifter <månad, år>\"],\r\n              backgroundColor: [\"#3e95cd\", \"#8e5ea2\",\"#3cba9f\"],\r\n              data: [5000, 3000, 3000],\r\n          }\r\n      ]\r\n    },\r\n\r\n    options: {\r\n      title: {\r\n        display: false,\r\n        text: 'Utgifter <månad, år> procentuellt'\r\n      },\r\n      legend: {\r\n        display: false\r\n      }\r\n    },\r\n\r\n  });\r\n}\r\n\r\n  render() {\r\n\r\n    return(\r\n      <div class=\"dashboard-card box-shadow\">\r\n\r\n        <p class=\"dashboard-card-name\"> <span>{this.props.month}</span> <span>{this.props.year}</span> </p>\r\n\r\n        <canvas id=\"doughnutChart\" ref={this.chartRef2}></canvas>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col\">\r\n                <span class=\"dot color-income\"></span>\r\n                Income:\r\n            </div>\r\n            <div class=\"col\">\r\n              {this.props.income} kr\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col\">\r\n                <span class=\"dot color-expense\"></span>\r\n                Expenses:\r\n            </div>\r\n            <div class=\"col\">\r\n            {this.props.expense} kr\r\n            </div>\r\n        </div>\r\n        \r\n        <div class=\"row\">\r\n            <div class=\"col\">\r\n                <span class=\"dot color-saving\"></span>\r\n                Savings:\r\n            </div>\r\n            <div class=\"col\">\r\n              {this.props.savings} kr\r\n            </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","C:\\Users\\theok\\OneDrive\\Documents\\NetBeansProjects\\DAT076Project\\react_version\\src\\pages\\Graph.js",["65","66","67","68","69","70","71","72","73"],"import React from 'react';\r\nimport Chart from 'chart.js';\r\nimport '../css/graph.css'\r\n\r\n\r\nexport default class Graph extends React.Component {\r\n\r\nchartRef1 = React.createRef();\r\nchartRef2 = React.createRef();\r\n\r\n    componentDidMount() {\r\n        const barChartRef = this.chartRef1.current.getContext(\"2d\");\r\n        const doughnutChartRef = this.chartRef2.current.getContext(\"2d\");\r\n\r\n        // Horizontal bar code\r\n        new Chart(barChartRef, {\r\n            type: \"horizontalBar\",\r\n            data: {\r\n                //Bring in data\r\n                labels: [\"Hyra\", \"Mat\", \"Shopping\"],\r\n                datasets: [\r\n                    {\r\n\r\n                        label: \" Kronor\",\r\n                        backgroundColor: [\"#3e95cd\", \"#8e5ea2\",\"#3cba9f\"],\r\n                        data: [5000, 3000, 3000],\r\n                    }\r\n                ]\r\n            },\r\n            options: {\r\n              responsive: true,\r\n              scales: {\r\n                  xAxes: [{\r\n                      ticks: {\r\n                          beginAtZero: true,\r\n                          max:7000 //TODO take data array, find max value, max of graph should be max value + constant\r\n                          }\r\n                   }]\r\n               },\r\n              title: {\r\n                display: true,\r\n                text: 'Distribution av utgifter <månad, år>'\r\n              },\r\n              legend: {\r\n                display: false\r\n              }\r\n            }\r\n        });\r\n\r\n        // Doughnut chart code\r\n        new Chart(doughnutChartRef, {\r\n          type:\"doughnut\",\r\n          data: {\r\n            //Bring in data\r\n            labels: [\"Hyra\", \"Mat\", \"Shopping\"],\r\n            datasets: [\r\n                {\r\n\r\n                    label: [\"Utgifter <månad, år>\"],\r\n                    backgroundColor: [\"#3e95cd\", \"#8e5ea2\",\"#3cba9f\"],\r\n                    data: [5000, 3000, 3000],\r\n                }\r\n            ]\r\n          },\r\n\r\n          options: {\r\n            title: {\r\n              display: true,\r\n              text: 'Utgifter <månad, år> procentuellt'\r\n            }\r\n          },\r\n\r\n        });\r\n\r\n      }\r\n\r\n  render() {\r\n    return(\r\n\r\n    <div>\r\n        <div class='row'>\r\n\r\n          <div class='col-1'>\r\n            <p class=\"text-sorting\" >2021</p>\r\n            <div class=\"dropdown\">\r\n              <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                Välj år\r\n              </button>\r\n              <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                <a class=\"dropdown-item\" href=\"#\">Action</a>\r\n                <a class=\"dropdown-item\" href=\"#\">Another action</a>\r\n                <a class=\"dropdown-item\" href=\"#\">Something else here</a>\r\n              </div>\r\n              </div>\r\n          </div>\r\n\r\n          <div class='col-1'>\r\n            <p class=\"text-sorting\" >January</p>\r\n            <div class=\"dropdown\">\r\n              <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                Välj månad\r\n              </button>\r\n              <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                <a class=\"dropdown-item\" href=\"#\">Action</a>\r\n                <a class=\"dropdown-item\" href=\"#\">Another action</a>\r\n                <a class=\"dropdown-item\" href=\"#\">Something else here</a>\r\n              </div>\r\n              </div>\r\n          </div>\r\n\r\n          <div class='col-1'>\r\n            <p class=\"text-sorting\" > 21</p>\r\n            <div class=\"dropdown\">\r\n              <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                Välj dag\r\n              </button>\r\n              <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                <a class=\"dropdown-item\" href=\"#\">Action</a>\r\n                <a class=\"dropdown-item\" href=\"#\">Another action</a>\r\n                <a class=\"dropdown-item\" href=\"#\">Something else here</a>\r\n              </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class='row'>\r\n          <div class='col-6 bar-top-buffer' style={{position: 'relative'}}>\r\n            <canvas id=\"barChart\" ref={this.chartRef1}></canvas>\r\n         </div>\r\n         <div class='col-6 donut-top-buffer' style={{position: 'relative'}}>\r\n           <canvas id=\"doughnutChart\" ref={this.chartRef2}></canvas>\r\n        </div>\r\n       </div>\r\n    </div>\r\n   )\r\n };\r\n\r\n}\r\n","C:\\Users\\theok\\OneDrive\\Documents\\NetBeansProjects\\DAT076Project\\react_version\\src\\components\\Sidebar.js",["74","75","76","77"],"import React, {useState} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faHome} from '@fortawesome/free-solid-svg-icons';\r\nimport {faCalendarAlt} from '@fortawesome/free-solid-svg-icons';\r\nimport {faChartBar} from '@fortawesome/free-solid-svg-icons';\r\nimport {faCog} from '@fortawesome/free-solid-svg-icons';\r\nimport {faBars} from '@fortawesome/free-solid-svg-icons';\r\nimport {faTimes} from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { SidebarData } from './SidebarData';\r\nimport '../css/Sidebar.css';\r\n\r\nfunction Sidebar() {\r\n    const [sidebar, setSidebar] = useState(false)\r\n\r\n    const showSidebar = () => setSidebar(!sidebar)\r\n\r\n    return(\r\n        <>\r\n        <div class=\"navbar\">\r\n            <Link to=\"#\" className=\"menu-bars\">\r\n                <FontAwesomeIcon icon={faBars} color='black' size='2x' onClick={showSidebar} className=\"change-hamburger-color\"/>\r\n            </Link>    \r\n        </div>\r\n        <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\r\n            <ul className=\"nav-menu-items\" onClick={showSidebar}>\r\n                <li className=\"navbar-toggle\">\r\n                <h1 class='logo'> CashIt <span> <Link>\r\n                  <FontAwesomeIcon icon={faTimes} color='white' size='sm' className=\"change-close-color\"/>\r\n                </Link>  </span></h1>\r\n                 \r\n                \r\n                </li>\r\n                {SidebarData.map((item, index) => {\r\n                    return (\r\n                        <li key={index} className={item.cName}>\r\n                            <Link to={item.path}>\r\n                                {item.icon}\r\n                                <span>\r\n                                    {item.title}\r\n                                </span>\r\n                            </Link>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Sidebar; ","C:\\Users\\theok\\OneDrive\\Documents\\NetBeansProjects\\DAT076Project\\react_version\\src\\components\\ExpenseTable.js",[],"C:\\Users\\theok\\OneDrive\\Documents\\NetBeansProjects\\DAT076Project\\react_version\\src\\components\\SidebarData.js",[],{"ruleId":"78","severity":1,"message":"79","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":11},{"ruleId":"78","severity":1,"message":"82","line":6,"column":32,"nodeType":"80","messageId":"81","endLine":6,"endColumn":42},{"ruleId":"78","severity":1,"message":"83","line":8,"column":8,"nodeType":"80","messageId":"81","endLine":8,"endColumn":21},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"78","severity":1,"message":"88","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":21},{"ruleId":"78","severity":1,"message":"88","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":21},{"ruleId":"78","severity":1,"message":"88","line":2,"column":8,"nodeType":"80","messageId":"81","endLine":2,"endColumn":21},{"ruleId":"89","severity":1,"message":"90","line":90,"column":17,"nodeType":"91","endLine":90,"endColumn":51},{"ruleId":"89","severity":1,"message":"90","line":91,"column":17,"nodeType":"91","endLine":91,"endColumn":51},{"ruleId":"89","severity":1,"message":"90","line":92,"column":17,"nodeType":"91","endLine":92,"endColumn":51},{"ruleId":"89","severity":1,"message":"90","line":104,"column":17,"nodeType":"91","endLine":104,"endColumn":51},{"ruleId":"89","severity":1,"message":"90","line":105,"column":17,"nodeType":"91","endLine":105,"endColumn":51},{"ruleId":"89","severity":1,"message":"90","line":106,"column":17,"nodeType":"91","endLine":106,"endColumn":51},{"ruleId":"89","severity":1,"message":"90","line":118,"column":17,"nodeType":"91","endLine":118,"endColumn":51},{"ruleId":"89","severity":1,"message":"90","line":119,"column":17,"nodeType":"91","endLine":119,"endColumn":51},{"ruleId":"89","severity":1,"message":"90","line":120,"column":17,"nodeType":"91","endLine":120,"endColumn":51},{"ruleId":"78","severity":1,"message":"92","line":5,"column":9,"nodeType":"80","messageId":"81","endLine":5,"endColumn":15},{"ruleId":"78","severity":1,"message":"93","line":6,"column":9,"nodeType":"80","messageId":"81","endLine":6,"endColumn":22},{"ruleId":"78","severity":1,"message":"94","line":7,"column":9,"nodeType":"80","messageId":"81","endLine":7,"endColumn":19},{"ruleId":"78","severity":1,"message":"95","line":8,"column":9,"nodeType":"80","messageId":"81","endLine":8,"endColumn":14},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'IndexRoute' is defined but never used.","'NavigationBar' is defined but never used.","no-native-reassign",["96"],"no-negated-in-lhs",["97"],"'CircleDiagram' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'faHome' is defined but never used.","'faCalendarAlt' is defined but never used.","'faChartBar' is defined but never used.","'faCog' is defined but never used.","no-global-assign","no-unsafe-negation"]